<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.koreait.jpa.mapper.PostMapper">

    <!-- 게시글 작성 -->
    <insert id="insertPost" parameterType="com.koreait.jpa.entity.PostEntity" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO post (title, content, author_id)
        VALUES (#{title}, #{content}, #{authorId})
    </insert>

    <!-- 게시글 목록 조회 (페이징) -->
    <select id="findAllWithPaging" resultType="com.koreait.jpa.dto.PostResponseDto">
        SELECT 
            p.id,
            p.title,
            p.content,
            p.view_count,
            p.created_at,
            p.updated_at,
            m.id as author_id,
            m.username as author_username,
            m.nickname as author_nickname
        FROM post p
        JOIN member m ON p.author_id = m.id
        ORDER BY p.created_at DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- 전체 게시글 수 조회 -->
    <select id="countAll" resultType="int">
        SELECT COUNT(*) FROM post
    </select>

    <!-- 게시글 상세 조회 -->
    <select id="findById" resultType="com.koreait.jpa.dto.PostResponseDto">
        SELECT 
            p.id,
            p.title,
            p.content,
            p.view_count,
            p.created_at,
            p.updated_at,
            m.id as author_id,
            m.username as author_username,
            m.nickname as author_nickname
        FROM post p
        JOIN member m ON p.author_id = m.id
        WHERE p.id = #{id}
    </select>

    <!-- 조회수 증가 -->
    <update id="incrementViewCount">
        UPDATE post
        SET view_count = view_count + 1
        WHERE id = #{id}
    </update>

    <!-- 게시글 수정 -->
    <update id="updatePost" parameterType="com.koreait.jpa.entity.PostEntity">
        UPDATE post
        SET title = #{title}, content = #{content}, updated_at = CURRENT_TIMESTAMP
        WHERE id = #{id} AND author_id = #{authorId}
    </update>

    <!-- 게시글 삭제 -->
    <delete id="deletePost">
        DELETE FROM post
        WHERE id = #{id} AND author_id = #{authorId}
    </delete>

    <!-- 게시글 작성자 확인 -->
    <select id="findAuthorIdById" resultType="long">
        SELECT author_id
        FROM post
        WHERE id = #{id}
    </select>

</mapper> 